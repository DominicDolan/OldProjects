@model FoodFetch.Models.UserModel
@{
    ViewBag.Title = "Register";
}

<div class="container">
    <div class="col-sm-6">
        <h2>Register</h2>
        @using (Html.BeginForm("Register", "User", FormMethod.Post))
        {
            if (ViewBag.RegisterPost != null && ViewBag.RegisterPost)
            {
                @Html.ValidationSummary(false, "", new { @class = "form-group" })
                if (ViewBag.Status != null)
                {
                    <div class="form-group">@ViewBag.Status</div>
                }
            }
            <div class="form-group">
                @Html.LabelFor(u => u.FirstName)
                @Html.TextBoxFor(u => u.FirstName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.LastName)
                @Html.TextBoxFor(u => u.LastName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.Email)
                @Html.TextBoxFor(u => u.Email, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.Password)
                @Html.PasswordFor(u => u.Password, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.ComparePassword)
                @Html.PasswordFor(u => u.ComparePassword, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <input id="Submit1" type="submit" value="Register" class="form-control" />
            </div>
            <div class="form-group">
                <input id="Reset1" type="reset" value="Clear" class="form-control" />
            </div>
        }
 </div>

    <div class="col-sm-6">
        <h2>Login</h2>
        @using (Html.BeginForm("Login", "User", FormMethod.Post))
        {
            if (ViewBag.RegisterPost != null && !ViewBag.RegisterPost)
            {
                @Html.ValidationSummary(false, "", new { @class = "form-group" })
                if (ViewBag.Error)
                {
                    <div class="form-group">E-mail or Password is incorrect</div>
                }
            }

            <div class="form-group">
                @Html.LabelFor(u => u.Email)
                @Html.TextBoxFor(u => u.Email, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(u => u.Password)
                @Html.PasswordFor(u => u.Password, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <input id="Submit1" type="submit" value="Submit" class="form-control" />
            </div>
            <div class="form-group">
                <input id="Reset1" type="reset" value="Clear" class="form-control" />
            </div>
        }
    </div>
</div>